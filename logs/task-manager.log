2025-03-31 00:00:00 [scheduling-1] [SYSTEM] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.checkHourlyDeadlineNotifications() với tham số = []
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.service.impl.AuthServiceImpl - Exception trong com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với nguyên nhân = NULL
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.service.impl.AuthServiceImpl - Stack trace: 
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkHourlyDeadlineNotifications(NotificationServiceImpl.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkHourlyDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.s.i.NotificationServiceImpl - Exception trong com.net.ken.server.service.impl.NotificationServiceImpl.checkHourlyDeadlineNotifications() với nguyên nhân = NULL
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.s.i.NotificationServiceImpl - Stack trace: 
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkHourlyDeadlineNotifications(NotificationServiceImpl.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkHourlyDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkHourlyDeadlineNotifications(NotificationServiceImpl.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkHourlyDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.checkAndCreateDeadlineNotifications() với tham số = []
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.service.impl.AuthServiceImpl - Exception trong com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với nguyên nhân = NULL
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.service.impl.AuthServiceImpl - Stack trace: 
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkAndCreateDeadlineNotifications(NotificationServiceImpl.java:179)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkAndCreateDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.s.i.NotificationServiceImpl - Exception trong com.net.ken.server.service.impl.NotificationServiceImpl.checkAndCreateDeadlineNotifications() với nguyên nhân = NULL
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR c.n.k.s.s.i.NotificationServiceImpl - Stack trace: 
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkAndCreateDeadlineNotifications(NotificationServiceImpl.java:179)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkAndCreateDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:00:00 [scheduling-1] [SYSTEM] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
com.net.ken.server.exception.TaskManagerException$ValidationException: Không tìm thấy người dùng hiện tại
	at com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser(AuthServiceImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:430)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:565)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:447)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.getCurrentUser(<generated>)
	at com.net.ken.server.service.impl.NotificationServiceImpl.getCurrentUser(NotificationServiceImpl.java:48)
	at com.net.ken.server.service.impl.NotificationServiceImpl.checkAndCreateDeadlineNotifications(NotificationServiceImpl.java:179)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.NotificationServiceImpl$$SpringCGLIB$$0.checkAndCreateDeadlineNotifications(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:01:27 [SpringApplicationShutdownHook] [SYSTEM] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-31 00:01:27 [tomcat-shutdown] [SYSTEM] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-03-31 00:01:27 [SpringApplicationShutdownHook] [SYSTEM] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 00:01:27 [SpringApplicationShutdownHook] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-31 00:01:27 [SpringApplicationShutdownHook] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-31 00:05:58 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - Starting ServerApplication using Java 23.0.2 with PID 10972 (E:\taskmanager\server\target\classes started by Admin in E:\taskmanager)
2025-03-31 00:05:58 [main] [SYSTEM] DEBUG c.net.ken.server.ServerApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-03-31 00:05:58 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-31 00:05:59 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-31 00:05:59 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-31 00:05:59 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 5 JPA repository interfaces.
2025-03-31 00:06:00 [main] [SYSTEM] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-03-31 00:06:00 [main] [SYSTEM] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-31 00:06:00 [main] [SYSTEM] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-03-31 00:06:00 [main] [SYSTEM] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-31 00:06:00 [main] [SYSTEM] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2012 ms
2025-03-31 00:06:01 [main] [SYSTEM] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-31 00:06:01 [main] [SYSTEM] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-03-31 00:06:01 [main] [SYSTEM] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-31 00:06:01 [main] [SYSTEM] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-31 00:06:01 [main] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-31 00:06:01 [main] [SYSTEM] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3435a4e5
2025-03-31 00:06:01 [main] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-31 00:06:01 [main] [SYSTEM] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-31 00:06:01 [main] [SYSTEM] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-31 00:06:01 [main] [SYSTEM] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-31 00:06:02 [main] [SYSTEM] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-31 00:06:03 [main] [SYSTEM] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 00:06:03 [main] [SYSTEM] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-03-31 00:06:03 [main] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-31 00:06:03 [main] [SYSTEM] DEBUG c.n.k.server.filter.RateLimitFilter - Filter 'rateLimitFilter' configured for use
2025-03-31 00:06:03 [main] [SYSTEM] DEBUG c.n.k.s.c.RequestLoggingFilterConfig$1 - Filter 'requestLoggingFilter' configured for use
2025-03-31 00:06:04 [main] [SYSTEM] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-31 00:06:04 [main] [SYSTEM] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-31 00:06:04 [main] [SYSTEM] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-31 00:06:04 [main] [SYSTEM] INFO  c.n.k.s.service.impl.TaskServiceImpl - TaskServiceImpl đã được khởi tạo
2025-03-31 00:06:05 [main] [SYSTEM] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-03-31 00:06:05 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'projectCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:06:05 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'taskCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:06:05 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'notificationCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:06:05 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'userCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:06:05 [main] [SYSTEM] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-03-31 00:06:05 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - Started ServerApplication in 7.741 seconds (process running for 9.05)
2025-03-31 00:06:05 [RMI TCP Connection(2)-192.168.0.102] [SYSTEM] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-31 00:06:05 [RMI TCP Connection(2)-192.168.0.102] [SYSTEM] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-31 00:06:05 [RMI TCP Connection(2)-192.168.0.102] [SYSTEM] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-31 00:06:39 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:06:39 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:06:39 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [084b9a80-069f-4a86-9798-36f2b55da42a]: POST /api/auth/login 
2025-03-31 00:06:39 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:06:39 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:06:39 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:06:39 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=null, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] ERROR c.n.k.s.service.impl.AuthServiceImpl - Lỗi trong quá trình xác thực người dùng
org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy163.resetFailedLoginAttempts(Unknown Source)
	at com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser(AuthServiceImpl.java:103)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.service.impl.AuthServiceImpl$$SpringCGLIB$$0.authenticateUser(<generated>)
	at com.net.ken.server.controller.AuthController.login(AuthController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.net.ken.server.aspect.LoggingAspect.logAround(LoggingAspect.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.net.ken.server.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.net.ken.server.config.RequestLoggingFilterConfig$1.doFilterInternal(RequestLoggingFilterConfig.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:65)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.RateLimitFilter.doFilterInternal(RateLimitFilter.java:65)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:560)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.executeUpdate(QuerySqmImpl.java:489)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 196 common frames omitted
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:06:40.865323300, status=400, title=Error, errorCode=AUTH_ERROR, message=Lỗi trong quá trình xử lý đăng nhập, validationErrors=null, data=LoginResponse(success=false, data=null, message=Lỗi trong quá trình xử lý đăng nhập, errorCode=AUTH_ERROR, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=false, pageInfo=null)
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:06:40.865323300, status=400, title=Error, errorCode=AUTH_ERROR, message=Lỗi trong quá trình xử lý đăng nhập, validationErrors=null, data=LoginResponse(success=false, data=null, message=Lỗi trong quá trình xử lý đăng nhập, errorCode=AUTH_ERROR, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=false, pageInfo=null),[]>
2025-03-31 00:06:40 [http-nio-8080-exec-1] [084b9a80-069f-4a86-9798-36f2b55da42a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [084b9a80-069f-4a86-9798-36f2b55da42a]: POST /api/auth/login - 200 (1662 ms)
2025-03-31 00:10:49 [SpringApplicationShutdownHook] [SYSTEM] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-31 00:10:49 [tomcat-shutdown] [SYSTEM] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-03-31 00:10:49 [SpringApplicationShutdownHook] [SYSTEM] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 00:10:49 [SpringApplicationShutdownHook] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-31 00:10:49 [SpringApplicationShutdownHook] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-31 00:10:55 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - Starting ServerApplication using Java 23.0.2 with PID 8796 (E:\taskmanager\server\target\classes started by Admin in E:\taskmanager)
2025-03-31 00:10:55 [main] [SYSTEM] DEBUG c.net.ken.server.ServerApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-03-31 00:10:55 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-31 00:10:56 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-31 00:10:56 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-31 00:10:56 [main] [SYSTEM] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 5 JPA repository interfaces.
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1905 ms
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-31 00:10:57 [main] [SYSTEM] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-31 00:10:57 [main] [SYSTEM] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-31 00:10:57 [main] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-31 00:10:58 [main] [SYSTEM] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3435a4e5
2025-03-31 00:10:58 [main] [SYSTEM] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-31 00:10:58 [main] [SYSTEM] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-31 00:10:58 [main] [SYSTEM] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-31 00:10:58 [main] [SYSTEM] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-31 00:10:59 [main] [SYSTEM] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-31 00:10:59 [main] [SYSTEM] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 00:10:59 [main] [SYSTEM] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-03-31 00:11:00 [main] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-31 00:11:00 [main] [SYSTEM] DEBUG c.n.k.server.filter.RateLimitFilter - Filter 'rateLimitFilter' configured for use
2025-03-31 00:11:00 [main] [SYSTEM] DEBUG c.n.k.s.c.RequestLoggingFilterConfig$1 - Filter 'requestLoggingFilter' configured for use
2025-03-31 00:11:00 [main] [SYSTEM] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-31 00:11:00 [main] [SYSTEM] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-31 00:11:00 [main] [SYSTEM] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-31 00:11:00 [main] [SYSTEM] INFO  c.n.k.s.service.impl.TaskServiceImpl - TaskServiceImpl đã được khởi tạo
2025-03-31 00:11:01 [main] [SYSTEM] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-03-31 00:11:01 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'projectCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:11:01 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'taskCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:11:01 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'notificationCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:11:01 [main] [SYSTEM] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'userCache' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-03-31 00:11:02 [main] [SYSTEM] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-03-31 00:11:02 [main] [SYSTEM] INFO  c.net.ken.server.ServerApplication - Started ServerApplication in 7.398 seconds (process running for 8.372)
2025-03-31 00:11:02 [RMI TCP Connection(1)-192.168.0.102] [SYSTEM] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-31 00:11:02 [RMI TCP Connection(1)-192.168.0.102] [SYSTEM] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-31 00:11:02 [RMI TCP Connection(1)-192.168.0.102] [SYSTEM] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-31 00:12:18 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:12:18 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:12:18 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [91fcda14-e535-456f-9af5-fd8e3fac65a2]: POST /api/auth/login 
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:12:19 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=null, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=null, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzNDQxMTQwfQ._Yk_ZSyfO-XA1VEfvdOFPKb6mGZblMTb4tKF2QOH2bE
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=null, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzOTU5NTQwfQ.9f0dzmooamW2yP4hGWPu3RLKzYXXoCSZ7aDO-_2-ZuI
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Đang cập nhật thời gian đăng nhập cho người dùng: namanh1
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] INFO  c.n.k.s.service.impl.AuthServiceImpl - Người dùng namanh1 đã đăng nhập thành công
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:12:20.160378200, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzNDQxMTQwfQ._Yk_ZSyfO-XA1VEfvdOFPKb6mGZblMTb4tKF2QOH2bE, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzOTU5NTQwfQ.9f0dzmooamW2yP4hGWPu3RLKzYXXoCSZ7aDO-_2-ZuI, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null)
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:12:20.160378200, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzNDQxMTQwfQ._Yk_ZSyfO-XA1VEfvdOFPKb6mGZblMTb4tKF2QOH2bE, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDc0MCwiZXhwIjoxNzQzOTU5NTQwfQ.9f0dzmooamW2yP4hGWPu3RLKzYXXoCSZ7aDO-_2-ZuI, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null),[]>
2025-03-31 00:12:20 [http-nio-8080-exec-1] [91fcda14-e535-456f-9af5-fd8e3fac65a2] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [91fcda14-e535-456f-9af5-fd8e3fac65a2]: POST /api/auth/login - 200 (1441 ms)
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/validate-token
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzNDQwMzQ4fQ.JNDpaWZiyoVv1kP7O_Lly88LLplHUfrkestW-v6E3Pk]
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzNDQwMzQ4fQ.JNDpaWZiyoVv1kP7O_Lly88LLplHUfrkestW-v6E3Pk, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = true
2025-03-31 00:14:33 [http-nio-8080-exec-5] [SYSTEM] WARN  c.n.k.s.f.JwtAuthenticationFilter - JWT được tạo trước khi mật khẩu thay đổi cho người dùng: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/validate-token
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzNDQwMzQ4fQ.JNDpaWZiyoVv1kP7O_Lly88LLplHUfrkestW-v6E3Pk]
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzNDQwMzQ4fQ.JNDpaWZiyoVv1kP7O_Lly88LLplHUfrkestW-v6E3Pk, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = true
2025-03-31 00:14:33 [http-nio-8080-exec-6] [SYSTEM] WARN  c.n.k.s.f.JwtAuthenticationFilter - JWT được tạo trước khi mật khẩu thay đổi cho người dùng: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/refresh-token
2025-03-31 00:14:33 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/refresh-token, skipping authentication
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [dc95fc1d-f5b7-46d6-a419-7e09913c8660]: POST /api/auth/refresh-token 
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.refreshToken() với tham số = [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzOTU4NzQ4fQ.krMHChG5oahcMGckCFq3OugJrB3m9_QiE7SW-dljXZg)]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu làm mới token
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.refreshToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzOTU4NzQ4fQ.krMHChG5oahcMGckCFq3OugJrB3m9_QiE7SW-dljXZg]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xử lý yêu cầu làm mới token
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.validateJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzOTU4NzQ4fQ.krMHChG5oahcMGckCFq3OugJrB3m9_QiE7SW-dljXZg]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.validateJwtToken() với kết quả = true
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYxMDAiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1Mzk0OCwiZXhwIjoxNzQzOTU4NzQ4fQ.krMHChG5oahcMGckCFq3OugJrB3m9_QiE7SW-dljXZg]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzOTU5NjczfQ.NwRx6p_vEeN27tFDqJe9G0F-JRvcuHKXr78Ulbps-tc
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] INFO  c.n.k.s.service.impl.AuthServiceImpl - Token đã được làm mới thành công cho người dùng: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.refreshToken() với kết quả = ResponseDTO(timestamp=2025-03-31T00:14:33.451052, status=200, title=null, errorCode=null, message=Token đã được làm mới thành công, validationErrors=null, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzOTU5NjczfQ.NwRx6p_vEeN27tFDqJe9G0F-JRvcuHKXr78Ulbps-tc, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), success=true, pageInfo=null)
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.refreshToken() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:14:33.451052, status=200, title=null, errorCode=null, message=Token đã được làm mới thành công, validationErrors=null, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzOTU5NjczfQ.NwRx6p_vEeN27tFDqJe9G0F-JRvcuHKXr78Ulbps-tc, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), success=true, pageInfo=null),[]>
2025-03-31 00:14:33 [http-nio-8080-exec-8] [dc95fc1d-f5b7-46d6-a419-7e09913c8660] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [dc95fc1d-f5b7-46d6-a419-7e09913c8660]: POST /api/auth/refresh-token - 200 (84 ms)
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/validate-token
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI]
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:14:33 [http-nio-8080-exec-9] [474d5a32-8d1c-439a-82e1-338c24a36064] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [474d5a32-8d1c-439a-82e1-338c24a36064]: GET /api/auth/validate-token 
2025-03-31 00:14:33 [http-nio-8080-exec-9] [474d5a32-8d1c-439a-82e1-338c24a36064] ERROR c.n.k.s.e.GlobalExceptionHandler - Exception không xác định xảy ra: Required request parameter 'token' for method parameter type String is not present (URI: /api/auth/validate-token)
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'token' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:220)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:196)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.net.ken.server.config.RequestLoggingFilterConfig$1.doFilterInternal(RequestLoggingFilterConfig.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.RateLimitFilter.doFilterInternal(RateLimitFilter.java:65)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:14:33 [http-nio-8080-exec-9] [474d5a32-8d1c-439a-82e1-338c24a36064] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [474d5a32-8d1c-439a-82e1-338c24a36064]: GET /api/auth/validate-token - 500 (46 ms)
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/validate-token
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI]
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NDg3MywiZXhwIjoxNzQzNDQxMjczfQ.dcsS8LLsWneMFHXooUXgc-W7DhotriHXWTuL8opRwEI, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:14:33 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:14:33 [http-nio-8080-exec-10] [8a94048f-1477-43cf-a420-01b6b943b051] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8a94048f-1477-43cf-a420-01b6b943b051]: GET /api/auth/validate-token 
2025-03-31 00:14:33 [http-nio-8080-exec-10] [8a94048f-1477-43cf-a420-01b6b943b051] ERROR c.n.k.s.e.GlobalExceptionHandler - Exception không xác định xảy ra: Required request parameter 'token' for method parameter type String is not present (URI: /api/auth/validate-token)
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'token' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:220)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:196)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.net.ken.server.config.RequestLoggingFilterConfig$1.doFilterInternal(RequestLoggingFilterConfig.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.net.ken.server.filter.RateLimitFilter.doFilterInternal(RateLimitFilter.java:65)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-31 00:14:33 [http-nio-8080-exec-10] [8a94048f-1477-43cf-a420-01b6b943b051] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8a94048f-1477-43cf-a420-01b6b943b051]: GET /api/auth/validate-token - 500 (38 ms)
2025-03-31 00:17:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:17:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [1a3dc698-c814-4601-94bf-51b575d79bd0]: POST /api/auth/login 
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:00 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:12:20, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzOTU5ODIxfQ.8Cb9-3YpHJ0caUBB4Jyy_zD1BAmCNImy82AIgfTNOqM
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Đang cập nhật thời gian đăng nhập cho người dùng: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] INFO  c.n.k.s.service.impl.AuthServiceImpl - Người dùng namanh1 đã đăng nhập thành công
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:17:01.353566300, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzOTU5ODIxfQ.8Cb9-3YpHJ0caUBB4Jyy_zD1BAmCNImy82AIgfTNOqM, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null)
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:17:01.353566300, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzOTU5ODIxfQ.8Cb9-3YpHJ0caUBB4Jyy_zD1BAmCNImy82AIgfTNOqM, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null),[]>
2025-03-31 00:17:01 [http-nio-8080-exec-1] [1a3dc698-c814-4601-94bf-51b575d79bd0] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [1a3dc698-c814-4601-94bf-51b575d79bd0]: POST /api/auth/login - 200 (587 ms)
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:01 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:01 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [87b7c466-19a1-4741-8b0c-8d0dce01de5c]: GET /api/notifications/unread 
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [87739cb8-6cd2-4804-898c-50c92a7d57f0]: GET /api/tasks 
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [402b6ae0-648f-41a6-871b-d4faeb6054ca]: GET /api/projects 
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.TaskServiceImpl - Enter: com.net.ken.server.service.impl.TaskServiceImpl.getAllTasks() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.s.impl.ProjectServiceImpl - Enter: com.net.ken.server.service.impl.ProjectServiceImpl.getAllProjects() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.TaskServiceImpl - Đang lấy tất cả các task cho người dùng namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:01 [http-nio-8080-exec-10] [87b7c466-19a1-4741-8b0c-8d0dce01de5c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [87b7c466-19a1-4741-8b0c-8d0dce01de5c]: GET /api/notifications/unread - 200 (122 ms)
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.s.impl.ProjectServiceImpl - Exit: com.net.ken.server.service.impl.ProjectServiceImpl.getAllProjects() với kết quả = []
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.TaskServiceImpl - Đã tìm thấy 0 tasks
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.TaskServiceImpl - getAllTasks thực thi trong 60 ms
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.service.impl.TaskServiceImpl - Exit: com.net.ken.server.service.impl.TaskServiceImpl.getAllTasks() với kết quả = []
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:01 [http-nio-8080-exec-8] [402b6ae0-648f-41a6-871b-d4faeb6054ca] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [402b6ae0-648f-41a6-871b-d4faeb6054ca]: GET /api/projects - 200 (161 ms)
2025-03-31 00:17:01 [http-nio-8080-exec-9] [87739cb8-6cd2-4804-898c-50c92a7d57f0] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [87739cb8-6cd2-4804-898c-50c92a7d57f0]: GET /api/tasks - 200 (166 ms)
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [d86aef88-57c4-4475-9b4f-73954d2b5c8b]: GET /api/notifications/unread 
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:01 [http-nio-8080-exec-1] [d86aef88-57c4-4475-9b4f-73954d2b5c8b] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [d86aef88-57c4-4475-9b4f-73954d2b5c8b]: GET /api/notifications/unread - 200 (16 ms)
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:01 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:17:01 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:01 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:01 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:01 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:02 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8e398be8-1d56-4d03-aa69-b8ffaff2a172]: GET /api/projects 
2025-03-31 00:17:02 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [718a72cf-c664-48a3-be87-3335b9ebc82c]: GET /api/tasks 
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:02 [http-nio-8080-exec-2] [8e398be8-1d56-4d03-aa69-b8ffaff2a172] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8e398be8-1d56-4d03-aa69-b8ffaff2a172]: GET /api/projects - 200 (18 ms)
2025-03-31 00:17:02 [http-nio-8080-exec-6] [718a72cf-c664-48a3-be87-3335b9ebc82c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [718a72cf-c664-48a3-be87-3335b9ebc82c]: GET /api/tasks - 200 (18 ms)
2025-03-31 00:17:02 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:02 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [5741f91d-8e54-4ccd-83a6-01ec37991c01]: GET /api/notifications/unread 
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:02 [http-nio-8080-exec-7] [5741f91d-8e54-4ccd-83a6-01ec37991c01] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [5741f91d-8e54-4ccd-83a6-01ec37991c01]: GET /api/notifications/unread - 200 (14 ms)
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:02 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2523a529-7e35-480a-a3fe-09c97e83372f]: GET /api/notifications/unread 
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:02 [http-nio-8080-exec-3] [2523a529-7e35-480a-a3fe-09c97e83372f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2523a529-7e35-480a-a3fe-09c97e83372f]: GET /api/notifications/unread - 200 (11 ms)
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:04 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [fe25c63b-cdcc-405e-98d8-617ba62865a3]: GET /api/projects 
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:04 [http-nio-8080-exec-4] [fe25c63b-cdcc-405e-98d8-617ba62865a3] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [fe25c63b-cdcc-405e-98d8-617ba62865a3]: GET /api/projects - 200 (3 ms)
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:04 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [d875f4c7-2c2e-4049-9d83-a59ebeb5374a]: GET /api/projects 
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:04 [http-nio-8080-exec-5] [d875f4c7-2c2e-4049-9d83-a59ebeb5374a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [d875f4c7-2c2e-4049-9d83-a59ebeb5374a]: GET /api/projects - 200 (5 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98]: GET /api/tasks 
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-10] [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [7723b8f5-0dbb-4c42-8ebe-17d3cbd47c98]: GET /api/tasks - 200 (7 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [a468ba57-5658-4516-a05c-f8d3a3114768]: GET /api/projects 
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [e88b8f0a-c3ab-46b1-b429-fe91da4e279a]: GET /api/tags 
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-1] [a468ba57-5658-4516-a05c-f8d3a3114768] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [a468ba57-5658-4516-a05c-f8d3a3114768]: GET /api/projects - 200 (6 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-6] [e88b8f0a-c3ab-46b1-b429-fe91da4e279a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [e88b8f0a-c3ab-46b1-b429-fe91da4e279a]: GET /api/tags - 200 (37 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8e45f07b-0949-49d2-812a-97dbe2c9ed8c]: GET /api/tasks 
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:05 [http-nio-8080-exec-2] [8e45f07b-0949-49d2-812a-97dbe2c9ed8c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8e45f07b-0949-49d2-812a-97dbe2c9ed8c]: GET /api/tasks - 200 (9 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:05 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [b9df2254-a3d3-4fec-9a50-2e6cf5219f95]: GET /api/projects 
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-7] [b9df2254-a3d3-4fec-9a50-2e6cf5219f95] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [b9df2254-a3d3-4fec-9a50-2e6cf5219f95]: GET /api/projects - 200 (9 ms)
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:05 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [0e34d952-d7a8-4579-8e21-62da9bad83d1]: GET /api/tags 
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:05 [http-nio-8080-exec-3] [0e34d952-d7a8-4579-8e21-62da9bad83d1] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [0e34d952-d7a8-4579-8e21-62da9bad83d1]: GET /api/tags - 200 (23 ms)
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:06 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [d932e756-17b9-4545-bee2-3b11759fddeb]: GET /api/tags 
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:06 [http-nio-8080-exec-4] [d932e756-17b9-4545-bee2-3b11759fddeb] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [d932e756-17b9-4545-bee2-3b11759fddeb]: GET /api/tags - 200 (19 ms)
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:06 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e]: GET /api/tags 
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:06 [http-nio-8080-exec-5] [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [ebc16ce5-75e4-449f-8f0d-c0aff6e94f4e]: GET /api/tags - 200 (25 ms)
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:07 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [51fd116b-1df5-4175-86c7-d92b6bf85a37]: GET /api/notifications 
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getAllNotifications() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với kết quả = []
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getAllNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:07 [http-nio-8080-exec-10] [51fd116b-1df5-4175-86c7-d92b6bf85a37] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [51fd116b-1df5-4175-86c7-d92b6bf85a37]: GET /api/notifications - 200 (12 ms)
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g]
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTAyMSwiZXhwIjoxNzQzNDQxNDIxfQ.1TrvY6B9fJb5MR4RqFNnEksZAEYgDs4Ao3MC0XrV71g, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:17:07 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [b98f5dac-b029-42b3-995d-60aedf556d71]: GET /api/notifications 
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getAllNotifications() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với kết quả = []
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getAllNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:17:07 [http-nio-8080-exec-1] [b98f5dac-b029-42b3-995d-60aedf556d71] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [b98f5dac-b029-42b3-995d-60aedf556d71]: GET /api/notifications - 200 (12 ms)
2025-03-31 00:18:08 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:08 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [c220fe86-2d0c-4260-88ad-3fd6846a9f28]: POST /api/auth/login 
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:08 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-30T23:59:08, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 1)
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:09.941189500, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=1, maxFailedAttempts=null, remainingAttempts=5), success=false, pageInfo=null)
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:09.941189500, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=1, maxFailedAttempts=null, remainingAttempts=5), success=false, pageInfo=null),[]>
2025-03-31 00:18:09 [http-nio-8080-exec-10] [c220fe86-2d0c-4260-88ad-3fd6846a9f28] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [c220fe86-2d0c-4260-88ad-3fd6846a9f28]: POST /api/auth/login - 200 (1109 ms)
2025-03-31 00:18:14 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:14 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7]: POST /api/auth/login 
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:10, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=2, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:14 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:10, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=2, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:15 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 3)
2025-03-31 00:18:15 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:15.278243200, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=3, maxFailedAttempts=null, remainingAttempts=3), success=false, pageInfo=null)
2025-03-31 00:18:15 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:15.278243200, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=3, maxFailedAttempts=null, remainingAttempts=3), success=false, pageInfo=null),[]>
2025-03-31 00:18:15 [http-nio-8080-exec-1] [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [ed163177-92fa-4ab3-85c9-c9cb9cda1eb7]: POST /api/auth/login - 200 (700 ms)
2025-03-31 00:18:19 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:19 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [819c809e-b827-4d5e-b045-a8f5d4448bdf]: POST /api/auth/login 
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:19 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:15, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=4, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:15, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=4, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 5)
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:20.381092300, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=5, maxFailedAttempts=null, remainingAttempts=1), success=false, pageInfo=null)
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:20.381092300, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=5, maxFailedAttempts=null, remainingAttempts=1), success=false, pageInfo=null),[]>
2025-03-31 00:18:20 [http-nio-8080-exec-6] [819c809e-b827-4d5e-b045-a8f5d4448bdf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [819c809e-b827-4d5e-b045-a8f5d4448bdf]: POST /api/auth/login - 200 (754 ms)
2025-03-31 00:18:24 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:24 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd]: POST /api/auth/login 
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:20, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=6, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:20, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=6, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] WARN  c.n.k.s.service.impl.AuthServiceImpl - Tài khoản namanh1 đã bị khóa do nhập sai mật khẩu quá nhiều lần
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:24.756467200, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:24.756467200, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:18:24 [http-nio-8080-exec-2] [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [27fe6eb3-e6dd-4cdf-a8be-d662ddb6bebd]: POST /api/auth/login - 200 (738 ms)
2025-03-31 00:18:37 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:37 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [1be395aa-848d-471e-9c70-57079615f106]: POST /api/auth/login 
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Tài khoản bị khóa: namanh1
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:37.857501100, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:37.857501100, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:18:37 [http-nio-8080-exec-7] [1be395aa-848d-471e-9c70-57079615f106] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [1be395aa-848d-471e-9c70-57079615f106]: POST /api/auth/login - 200 (7 ms)
2025-03-31 00:18:39 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:39 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [c3d289df-6376-420c-bc27-f8da69a66e31]: POST /api/auth/login 
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Tài khoản bị khóa: namanh1
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:39.387956100, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:39.387956100, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:18:39 [http-nio-8080-exec-3] [c3d289df-6376-420c-bc27-f8da69a66e31] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [c3d289df-6376-420c-bc27-f8da69a66e31]: POST /api/auth/login - 200 (21 ms)
2025-03-31 00:18:40 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:40 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [120d495d-92de-4c61-b76f-38c1ea4f7e3f]: POST /api/auth/login 
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Tài khoản bị khóa: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:40.221977700, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:40.221977700, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:18:40 [http-nio-8080-exec-4] [120d495d-92de-4c61-b76f-38c1ea4f7e3f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [120d495d-92de-4c61-b76f-38c1ea4f7e3f]: POST /api/auth/login - 200 (21 ms)
2025-03-31 00:18:40 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:18:40 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [6ec0f9ea-af9e-4534-a21e-2ed1617995de]: POST /api/auth/login 
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Tài khoản bị khóa: namanh1
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:18:40.910975200, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:18:40.910975200, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:18:40 [http-nio-8080-exec-9] [6ec0f9ea-af9e-4534-a21e-2ed1617995de] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [6ec0f9ea-af9e-4534-a21e-2ed1617995de]: POST /api/auth/login - 200 (28 ms)
2025-03-31 00:19:16 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:19:16 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [61b390fe-a6e6-48a5-b933-785ed4354223]: POST /api/auth/login 
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Tài khoản bị khóa: namanh1
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:19:16.188938, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null)
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:19:16.188938, status=400, title=Error, errorCode=ACCOUNT_LOCKED, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., validationErrors=null, data=LoginResponse(success=false, data=null, message=Tài khoản của bạn đã bị khóa do nhập sai mật khẩu nhiều lần. Vui lòng liên hệ quản trị viên để được hỗ trợ., errorCode=ACCOUNT_LOCKED, failedAttempts=6, maxFailedAttempts=null, remainingAttempts=0), success=false, pageInfo=null),[]>
2025-03-31 00:19:16 [http-nio-8080-exec-8] [61b390fe-a6e6-48a5-b933-785ed4354223] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [61b390fe-a6e6-48a5-b933-785ed4354223]: POST /api/auth/login - 200 (11 ms)
2025-03-31 00:20:50 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:20:50 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [3fcd9332-d666-4582-b474-512e8bbb320f]: POST /api/auth/login 
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:50 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:17:01, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzOTYwMDUxfQ.yvo-gqkiIA184xKxfIb_gRAfMgJP9gVsTZeM0lZKv1A
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Đang cập nhật thời gian đăng nhập cho người dùng: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] INFO  c.n.k.s.service.impl.AuthServiceImpl - Người dùng namanh1 đã đăng nhập thành công
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:20:51.317171, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzOTYwMDUxfQ.yvo-gqkiIA184xKxfIb_gRAfMgJP9gVsTZeM0lZKv1A, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null)
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:20:51.317171, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzOTYwMDUxfQ.yvo-gqkiIA184xKxfIb_gRAfMgJP9gVsTZeM0lZKv1A, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null),[]>
2025-03-31 00:20:51 [http-nio-8080-exec-1] [3fcd9332-d666-4582-b474-512e8bbb320f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [3fcd9332-d666-4582-b474-512e8bbb320f]: POST /api/auth/login - 200 (427 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [ad20081f-ce20-4c18-af7a-9d652c6d3f20]: GET /api/tasks 
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-2] [ad20081f-ce20-4c18-af7a-9d652c6d3f20] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [ad20081f-ce20-4c18-af7a-9d652c6d3f20]: GET /api/tasks - 200 (7 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8c5f245f-2a8a-4078-ac6a-19f989ef769a]: GET /api/notifications/unread 
2025-03-31 00:20:51 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [3e2042c6-077b-4223-bf66-6fb0b4618d88]: GET /api/projects 
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-6] [3e2042c6-077b-4223-bf66-6fb0b4618d88] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [3e2042c6-077b-4223-bf66-6fb0b4618d88]: GET /api/projects - 200 (5 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-7] [8c5f245f-2a8a-4078-ac6a-19f989ef769a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8c5f245f-2a8a-4078-ac6a-19f989ef769a]: GET /api/notifications/unread - 200 (14 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2aa08763-b9c2-4eab-a9a9-336926945343]: GET /api/tasks 
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-3] [2aa08763-b9c2-4eab-a9a9-336926945343] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2aa08763-b9c2-4eab-a9a9-336926945343]: GET /api/tasks - 200 (4 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77]: GET /api/projects 
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f]: GET /api/notifications/unread 
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-4] [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [e28e9128-f39b-43e5-ba49-fcbd2a0bfb77]: GET /api/projects - 200 (6 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-9] [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [44b4b782-8db7-42fe-85dc-d7bd8ac0f22f]: GET /api/notifications/unread - 200 (14 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [a44e3614-671c-476c-8881-28468deb6d03]: GET /api/notifications/unread 
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-5] [a44e3614-671c-476c-8881-28468deb6d03] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [a44e3614-671c-476c-8881-28468deb6d03]: GET /api/notifications/unread - 200 (13 ms)
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:20:51 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [78581c71-1ba5-4984-87b9-2717272a71c1]: GET /api/notifications/unread 
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:20:51 [http-nio-8080-exec-8] [78581c71-1ba5-4984-87b9-2717272a71c1] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [78581c71-1ba5-4984-87b9-2717272a71c1]: GET /api/notifications/unread - 200 (6 ms)
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:21:00 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:21:00 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [97b5a91c-a7dd-4e0c-bb07-3651df511e9a]: GET /api/projects 
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [9ad4b9af-d425-4030-94ce-b984e57c6e4c]: GET /api/tasks 
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:21:00 [http-nio-8080-exec-10] [97b5a91c-a7dd-4e0c-bb07-3651df511e9a] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [97b5a91c-a7dd-4e0c-bb07-3651df511e9a]: GET /api/projects - 200 (5 ms)
2025-03-31 00:21:00 [http-nio-8080-exec-1] [9ad4b9af-d425-4030-94ce-b984e57c6e4c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [9ad4b9af-d425-4030-94ce-b984e57c6e4c]: GET /api/tasks - 200 (5 ms)
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg]
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NTI1MSwiZXhwIjoxNzQzNDQxNjUxfQ.q7NdY-yGiORhcZq5OTVSU3jKvR6z_AbKCGckdwjl7Eg, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:21:00 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:21:00 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [956c422c-fe28-41e7-bba0-0ef17438252f]: GET /api/projects 
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd]: GET /api/tasks 
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:21:00 [http-nio-8080-exec-2] [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [6ad2d3d5-45b1-4e10-84a6-1c8d59d277fd]: GET /api/tasks - 200 (3 ms)
2025-03-31 00:21:00 [http-nio-8080-exec-6] [956c422c-fe28-41e7-bba0-0ef17438252f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [956c422c-fe28-41e7-bba0-0ef17438252f]: GET /api/projects - 200 (3 ms)
2025-03-31 00:33:45 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:33:45 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [7ab308da-0df9-47ba-97d8-57dadb3715a9]: POST /api/auth/login 
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.012345)]
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với tham số = [User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:20:51, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.generateRefreshToken() với kết quả = eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzOTYwODI1fQ.LJZPXT6ZEDo0L5ZO8S5YYEdzOumCp_UoCoEnBroO0xk
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Đang cập nhật thời gian đăng nhập cho người dùng: namanh1
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] INFO  c.n.k.s.service.impl.AuthServiceImpl - Người dùng namanh1 đã đăng nhập thành công
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:33:45.954122700, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzOTYwODI1fQ.LJZPXT6ZEDo0L5ZO8S5YYEdzOumCp_UoCoEnBroO0xk, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null)
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:33:45.954122700, status=200, title=null, errorCode=null, message=Đăng nhập thành công, validationErrors=null, data=LoginResponse(success=true, data=JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzOTYwODI1fQ.LJZPXT6ZEDo0L5ZO8S5YYEdzOumCp_UoCoEnBroO0xk, type=null, id=3, username=namanh1, email=namanh@gmail.com, fullName=, roles=[USER], passwordExpired=false, daysUntilPasswordExpiry=90), message=Đăng nhập thành công, errorCode=null, failedAttempts=null, maxFailedAttempts=null, remainingAttempts=null), success=true, pageInfo=null),[]>
2025-03-31 00:33:45 [http-nio-8080-exec-8] [7ab308da-0df9-47ba-97d8-57dadb3715a9] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [7ab308da-0df9-47ba-97d8-57dadb3715a9]: POST /api/auth/login - 200 (565 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [c8954ae8-7ea8-4704-b5d9-29753813a704]: GET /api/notifications/unread 
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [28b7fd81-a142-4746-882f-8ff660e0d682]: GET /api/projects 
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [b81f86f7-fdbf-49d0-80d9-c53fbd054080]: GET /api/tasks 
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-10] [28b7fd81-a142-4746-882f-8ff660e0d682] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [28b7fd81-a142-4746-882f-8ff660e0d682]: GET /api/projects - 200 (4 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-1] [b81f86f7-fdbf-49d0-80d9-c53fbd054080] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [b81f86f7-fdbf-49d0-80d9-c53fbd054080]: GET /api/tasks - 200 (4 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-2] [c8954ae8-7ea8-4704-b5d9-29753813a704] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [c8954ae8-7ea8-4704-b5d9-29753813a704]: GET /api/notifications/unread - 200 (15 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [c3c3f208-8c2c-44c0-8979-cb9825b23172]: GET /api/tasks 
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [0d35adb9-d926-4af9-ace5-47455259efaf]: GET /api/notifications/unread 
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2f900f77-1b19-489c-aba5-bf491d3e12ae]: GET /api/projects 
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-7] [c3c3f208-8c2c-44c0-8979-cb9825b23172] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [c3c3f208-8c2c-44c0-8979-cb9825b23172]: GET /api/tasks - 200 (6 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-6] [2f900f77-1b19-489c-aba5-bf491d3e12ae] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2f900f77-1b19-489c-aba5-bf491d3e12ae]: GET /api/projects - 200 (5 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-3] [0d35adb9-d926-4af9-ace5-47455259efaf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [0d35adb9-d926-4af9-ace5-47455259efaf]: GET /api/notifications/unread - 200 (13 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [df9e864c-dfc2-450d-9d4c-bc4520588c63]: GET /api/notifications/unread 
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-9] [df9e864c-dfc2-450d-9d4c-bc4520588c63] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [df9e864c-dfc2-450d-9d4c-bc4520588c63]: GET /api/notifications/unread - 200 (12 ms)
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications/unread
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:46 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [fa18421e-4138-4c85-80c5-a6bb8cb6c227]: GET /api/notifications/unread 
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getUnreadNotifications() với kết quả = []
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getUnreadNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:46 [http-nio-8080-exec-4] [fa18421e-4138-4c85-80c5-a6bb8cb6c227] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [fa18421e-4138-4c85-80c5-a6bb8cb6c227]: GET /api/notifications/unread - 200 (4 ms)
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:52 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8c2fde0b-6a61-4e8e-be37-1f938526c306]: GET /api/projects 
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:52 [http-nio-8080-exec-5] [8c2fde0b-6a61-4e8e-be37-1f938526c306] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8c2fde0b-6a61-4e8e-be37-1f938526c306]: GET /api/projects - 200 (4 ms)
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:52 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [283bdc35-b919-4138-9b2c-f3b13bed3749]: GET /api/projects 
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:52 [http-nio-8080-exec-8] [283bdc35-b919-4138-9b2c-f3b13bed3749] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [283bdc35-b919-4138-9b2c-f3b13bed3749]: GET /api/projects - 200 (7 ms)
2025-03-31 00:33:53 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:33:53 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:33:53 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:53 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:53 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:53 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:53 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:53 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:53 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:53 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:53 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:53 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-1] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-2] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-10] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2cb95597-7d0b-4f64-b189-e1eae9913980]: GET /api/tasks 
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [4478bcaa-5d9a-453d-8ffe-82f378d3db8d]: GET /api/projects 
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [4bfde78d-6526-4888-93c1-6f4dea3db90c]: GET /api/tags 
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-10] [4478bcaa-5d9a-453d-8ffe-82f378d3db8d] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [4478bcaa-5d9a-453d-8ffe-82f378d3db8d]: GET /api/projects - 200 (3 ms)
2025-03-31 00:33:54 [http-nio-8080-exec-1] [2cb95597-7d0b-4f64-b189-e1eae9913980] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2cb95597-7d0b-4f64-b189-e1eae9913980]: GET /api/tasks - 200 (3 ms)
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/projects
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tasks
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-2] [4bfde78d-6526-4888-93c1-6f4dea3db90c] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [4bfde78d-6526-4888-93c1-6f4dea3db90c]: GET /api/tags - 200 (24 ms)
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:54 [http-nio-8080-exec-7] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-6] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [3fd937dc-736f-4fef-ab76-addb4c7429a2]: GET /api/tasks 
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf]: GET /api/projects 
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.controller.ProjectController - Enter: com.net.ken.server.controller.ProjectController.getAllProjects() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.controller.TaskController - Enter: com.net.ken.server.controller.TaskController.getAllTasks() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.controller.TaskController - Exit: com.net.ken.server.controller.TaskController.getAllTasks() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.controller.ProjectController - Exit: com.net.ken.server.controller.ProjectController.getAllProjects() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-7] [3fd937dc-736f-4fef-ab76-addb4c7429a2] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [3fd937dc-736f-4fef-ab76-addb4c7429a2]: GET /api/tasks - 200 (5 ms)
2025-03-31 00:33:54 [http-nio-8080-exec-6] [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [db54807b-9cb0-4b2c-8f41-41d2d8cedbcf]: GET /api/projects - 200 (5 ms)
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:54 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [8472d019-aad0-4064-b175-854ca9a85a04]: GET /api/tags 
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:54 [http-nio-8080-exec-3] [8472d019-aad0-4064-b175-854ca9a85a04] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [8472d019-aad0-4064-b175-854ca9a85a04]: GET /api/tags - 200 (18 ms)
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:55 [http-nio-8080-exec-9] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [1bb45ea4-00ef-417c-b6b9-050a717a3b9f]: GET /api/tags 
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:55 [http-nio-8080-exec-9] [1bb45ea4-00ef-417c-b6b9-050a717a3b9f] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [1bb45ea4-00ef-417c-b6b9-050a717a3b9f]: GET /api/tags - 200 (13 ms)
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/tags
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:55 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [487e3788-81fc-4823-b18d-212ba863738b]: GET /api/tags 
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.controller.TagController - Enter: com.net.ken.server.controller.TagController.getAllTags() với tham số = []
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.service.impl.TagServiceImpl - Enter: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với tham số = []
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.service.impl.TagServiceImpl - Exit: com.net.ken.server.service.impl.TagServiceImpl.getAllTags() với kết quả = []
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.controller.TagController - Exit: com.net.ken.server.controller.TagController.getAllTags() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:55 [http-nio-8080-exec-4] [487e3788-81fc-4823-b18d-212ba863738b] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [487e3788-81fc-4823-b18d-212ba863738b]: GET /api/tags - 200 (17 ms)
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:56 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [c8fbebe9-9ee4-49c8-b3a6-c9316c117069]: GET /api/notifications 
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getAllNotifications() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với kết quả = []
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getAllNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:56 [http-nio-8080-exec-5] [c8fbebe9-9ee4-49c8-b3a6-c9316c117069] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [c8fbebe9-9ee4-49c8-b3a6-c9316c117069]: GET /api/notifications - 200 (16 ms)
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/notifications
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U]
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.getUsernameFromJwtToken() với kết quả = namanh1
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - JWT valid, username: namanh1
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Enter: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với tham số = [eyJhbGciOiJIUzI1NiJ9.eyJwd2RDaGFuZ2VUaW1lIjoiMjAyNS0wMy0zMFQyMzo1OTowOC4wNDU3MTYiLCJkYXlzVW50aWxQd2RFeHBpcnkiOjkwLCJwd2RFeHBpcmVkIjpmYWxzZSwic3ViIjoibmFtYW5oMSIsImlhdCI6MTc0MzM1NjAyNSwiZXhwIjoxNzQzNDQyNDI1fQ.8aYgPA2LErkRPuFBGK_9gVclwTWmX7DNALIMbWbmL0U, User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])]
2025-03-31 00:33:56 [http-nio-8080-exec-8] [SYSTEM] DEBUG c.n.k.server.service.JwtTokenService - Exit: com.net.ken.server.service.JwtTokenService.isTokenIssuedBeforePasswordChange() với kết quả = false
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e]: GET /api/notifications 
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.c.NotificationController - Enter: com.net.ken.server.controller.NotificationController.getAllNotifications() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Enter: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với tham số = []
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.getCurrentUser() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.s.i.NotificationServiceImpl - Exit: com.net.ken.server.service.impl.NotificationServiceImpl.getAllNotifications() với kết quả = []
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.c.NotificationController - Exit: com.net.ken.server.controller.NotificationController.getAllNotifications() với kết quả = <200 OK OK,[],[]>
2025-03-31 00:33:56 [http-nio-8080-exec-8] [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [9c3dad64-ada7-43cf-92bf-a65ad7b14f5e]: GET /api/notifications - 200 (12 ms)
2025-03-31 00:35:01 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:35:01 [http-nio-8080-exec-3] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [e59ca8a3-4927-4afe-86db-0c79f91def24]: POST /api/auth/login 
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:35:01 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:18:25, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=0, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 1)
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:35:02.720375200, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=1, maxFailedAttempts=null, remainingAttempts=5), success=false, pageInfo=null)
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:35:02.720375200, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=1, maxFailedAttempts=null, remainingAttempts=5), success=false, pageInfo=null),[]>
2025-03-31 00:35:02 [http-nio-8080-exec-3] [e59ca8a3-4927-4afe-86db-0c79f91def24] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [e59ca8a3-4927-4afe-86db-0c79f91def24]: POST /api/auth/login - 200 (777 ms)
2025-03-31 00:40:56 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:40:56 [http-nio-8080-exec-4] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2939fdfe-92a3-4c67-bcf0-0c76fcdef862]: POST /api/auth/login 
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:40:56 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:35:03, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=2, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:35:03, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=2, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 3)
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:40:57.468753400, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=3, maxFailedAttempts=null, remainingAttempts=3), success=false, pageInfo=null)
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:40:57.468753400, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=3, maxFailedAttempts=null, remainingAttempts=3), success=false, pageInfo=null),[]>
2025-03-31 00:40:57 [http-nio-8080-exec-4] [2939fdfe-92a3-4c67-bcf0-0c76fcdef862] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2939fdfe-92a3-4c67-bcf0-0c76fcdef862]: POST /api/auth/login - 200 (709 ms)
2025-03-31 00:41:10 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Processing request: /api/auth/login
2025-03-31 00:41:10 [http-nio-8080-exec-5] [SYSTEM] DEBUG c.n.k.s.f.JwtAuthenticationFilter - Public endpoint: /api/auth/login, skipping authentication
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Bắt đầu xử lý request [2e2a2f2b-1671-4dd5-9afd-083f926af7fb]: POST /api/auth/login 
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.controller.AuthController - Enter: com.net.ken.server.controller.AuthController.login() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] INFO  c.n.k.s.controller.AuthController - AuthController: Xử lý yêu cầu đăng nhập cho username: namanh1
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Enter: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với tham số = [LoginRequest(username=namanh1, password=Ken.0123451)]
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] INFO  c.n.k.s.service.impl.AuthServiceImpl - Đang xác thực người dùng: namanh1
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:41:10 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:40:57, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=4, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Enter: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với tham số = [namanh1]
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.s.i.ApplicationUserDetailsService - Exit: com.net.ken.server.service.impl.ApplicationUserDetailsService.loadUserByUsername() với kết quả = User(id=3, username=namanh1, password=$2a$12$qsHEj5XvdbEGnju8e1Pvk.Tk7br.Gi9ymkJ3/Ae1cmsfiGFZ8Va9., email=namanh@gmail.com, fullName=, createdAt=2025-03-30T23:59:08, updatedAt=2025-03-31T00:40:57, lastLogin=2025-03-31T00:33:46, lastPasswordChangeDate=2025-03-30T23:59:08.045716, failedLoginAttempts=4, accountLockedDate=null, accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true, roles=[USER])
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] WARN  c.n.k.s.service.impl.AuthServiceImpl - Đăng nhập thất bại - Mật khẩu không chính xác cho người dùng: namanh1 (Lần thử thứ: 5)
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.service.impl.AuthServiceImpl - Exit: com.net.ken.server.service.impl.AuthServiceImpl.authenticateUser() với kết quả = ResponseDTO(timestamp=2025-03-31T00:41:11.371476700, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=5, maxFailedAttempts=null, remainingAttempts=1), success=false, pageInfo=null)
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.controller.AuthController - Exit: com.net.ken.server.controller.AuthController.login() với kết quả = <200 OK OK,ResponseDTO(timestamp=2025-03-31T00:41:11.371476700, status=400, title=Error, errorCode=INVALID_CREDENTIALS, message=Tên đăng nhập hoặc mật khẩu không chính xác, validationErrors=null, data=LoginResponse(success=false, data=null, message=Tên đăng nhập hoặc mật khẩu không chính xác, errorCode=INVALID_CREDENTIALS, failedAttempts=5, maxFailedAttempts=null, remainingAttempts=1), success=false, pageInfo=null),[]>
2025-03-31 00:41:11 [http-nio-8080-exec-5] [2e2a2f2b-1671-4dd5-9afd-083f926af7fb] DEBUG c.n.k.s.c.RequestLoggingFilterConfig - Hoàn thành xử lý request [2e2a2f2b-1671-4dd5-9afd-083f926af7fb]: POST /api/auth/login - 200 (671 ms)
